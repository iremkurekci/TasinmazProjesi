@model Taşınmaz_Projesi.Models.Tasinmaz
@using (Html.BeginForm())
{
    {
        ViewBag.Title = "Edit";
    }
    <h2>Taşınmazı Güncelle</h2>
    <br />
    <br />
    <br />
    <div style="float:left">@Html.ActionLink("Çıkış", "Cıkıs", "Login", null, new { @class = "btn-default" })</div>
    <br />
    <br />
    <br />


    @Html.AntiForgeryToken();
    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.TasinmazID)
        @**@
        <div class="form-group" style="float:left" id="leftpart">
            <div style="margin:50px">
                @Html.DropDownListFor(model => model.Il, ViewBag.illerListesi as SelectList, "İl", new { @class = "dropdown", id = "iller" })
                @Html.ValidationMessageFor(model => model.Il, "", new { @class = "text-danger" })
            </div>
            <div style="margin:50px">
                @Html.DropDownListFor(model => model.Ilce, ViewBag.ilcelerListesi as SelectList, "İlçe", new { @class = "dropdown", id = "ilceler" })
                @Html.ValidationMessageFor(model => model.Ilce, "", new { @class = "text-danger" })
            </div>
            <div style="margin:50px">
                @Html.DropDownListFor(model => model.Mahalle, Enumerable.Empty<SelectListItem>(), "Mahalle", new { @class = "dropdown", id = "mahalleler" })
                @Html.ValidationMessageFor(model => model.Mahalle, "", new { @class = "text-danger" })
            </div>
            <div style="margin:50px">
                @Html.EditorFor(model => model.Ada, new { htmlAttributes = new { @class = "form-control", Placeholder = "Ada", maxlength = "25" } })
                @Html.ValidationMessageFor(model => model.Ada, "", new { @class = "text-danger" })
            </div>
            <div style="margin:50px">
                @Html.EditorFor(model => model.Parsel, new { htmlAttributes = new { @class = "form-control", Placeholder = "Parsel", maxlength = "25" } })
                @Html.ValidationMessageFor(model => model.Parsel, "", new { @class = "text-danger" })
            </div>
            <div style="margin:50px">
                @Html.EditorFor(model => model.Nitelik, new { htmlAttributes = new { @class = "form-control", Placeholder = "Nitelik", maxlength = "25" } })
                @Html.ValidationMessageFor(model => model.Nitelik, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group" style="float:left">
            <div id="adres">
                @Html.EditorFor(model => model.Adres, new { htmlAttributes = new { @class = "form-control", Placeholder = "Adres", @rows = 15, @cols = 30 } })
                @Html.ValidationMessageFor(model => model.Adres, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="col-md-offset-6 col-md-6">
            <input type="submit" value="Güncelle" class="btn-primary" />
        </div>
        <div class="clear"></div>

    </div>

    <script src="~/Scripts/jquery-3.4.1.min.js"></script>
    //jquery kodlarını tanıması için gerekli. Bu yokken $ işaretini tanımıyor.
    <script type="text/javascript">

    $(document).ready(function () {



            //il seçildiğinde bu fonksiyon çalışmaya başlar
        $('#iller').change(function () {

            $("#ilceler option").remove(); //dropdown listeyi temizler
            $("#mahalleler option").remove()
            $("#ilceler").prepend('<option selected = "selected" value = "0"> İlçe </option>') //listede default option görünmesine engel olur
            $("#mahalleler").prepend('<option selected = "selected" value = "0"> Mahalle </option>') //prepend listenin başına veri ekler

            // seçilen ilin id sini alır
            var IlID = $(this).val();

            // seçilen ilID sini kullanarak GetIlceler metodunu çağırır.
            //Bu metoddan dönen liste sayesinde.each fonksiyonu ile ilceler dropdownlist doldurulur
            if (IlID != null && IlID != '') {
                $.ajax({
                    type: "post",
                    url: '@Url.Action("GetIlceler", "Tasinmaz")', //controllerdaki fonksiyonu çağırır
                    data: { IlID: IlID },
                    success: function (ilceler) {
                        $.each(ilceler, function (index, ilce) {
                            $('#ilceler').append($('<option/>', { //append listenin sonuna veri ekler
                                value: ilce.IlceID,
                                text: ilce.IlceAdi
                            }));
                        });



                    },
                    error: function () { // ajax işleminin başarısız olması durumunda hata mesajı verir
                        alert("Hata");
                    },
                    beforeSend: function () {
                        //bu alan form post edilmeden önce yapılacak işlemler için. loading gibi...
                    },
                    complete: function () {
                        //bu alan form post edildikten sonraki işlemler için. Yükleme tamamlandı gibi..
                    }
                });

            }
        });
        $('#ilceler').change(function () {

                $("#mahalleler option").remove();
                $("#mahalleler").prepend('<option selected = "selected" value = "0"> Mahalle </option>')
                var IlceID = $(this).val();

                if (IlceID != null && IlceID != '') {
                    $.ajax({
                        type: "post",
                        url: '@Url.Action("GetMahalleler", "Tasinmaz")',
                        data: { IlceID: IlceID },
                        success: function (mahalleler) {
                            $.each(mahalleler, function (index, mahalle) {
                                $('#mahalleler').append($('<option/>', {
                                    value: mahalle.MahalleID,
                                    text: mahalle.MahalleAdi
                                }));
                            });

                        },
                        error: function () { // ajax işleminin başarısız olması durumunda hata mesajı verir
                            alert("Hata");
                        },
                        beforeSend: function () {
                            //bu alan form post edilmeden önce yapılacak işlemler için. loading gibi...
                        },
                        complete: function () {
                            //bu alan form post edildikten sonraki işlemler için. Yükleme tamamlandı gibi..
                        }
                    });
                }
        });

        $('#iller').trigger('change');


        });

    </script>

    <style type="text/css">
        .clear {
            clear: both;
        }

        #adres {
            margin-left: 150px;
            margin-top: 50px;
            resize: none;
        }

        .form-control, .dropdown {
            border: 1px solid;
            border-radius: 40px;
            width: 300px;
            height: 60px;
            padding: 20px;
            resize: none;
        }

        .btn-primary {
            width: 150px;
            height: 60px;
            border: 1px solid;
            border-radius: 40px;
        }

        .btn-default {
            border: 1px solid;
            border-radius: 50%;
            width: 70px;
            height: 70px;
            outline: none;
            padding-left: 20px;
            padding-right: 20px;
            padding-bottom: 25px;
            padding-top: 25px;
        }
    </style>
}

}


